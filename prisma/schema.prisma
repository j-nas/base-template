// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    editor        Boolean   @default(false)
    Blog          Blog[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model BusinessInfo {
    id                String   @id @default(cuid())
    title             String
    addressFirstLine  String
    addressSecondLine String
    telephone         String
    email             String
    createdAt         DateTime @default(now())
    updatedAt         DateTime @updatedAt
    inUse             Boolean  @default(false)
    ownerName         String
    ownerTitle        String
    ownerQuote        String
    facebookUrl       String?
    twitterUrl        String?
    instagramUrl      String?
    linkedInUrl       String?
    youtubeUrl        String?
    pinterestUrl      String?
    tiktokUrl         String?
    snapchatUrl       String?
    whatsappUrl       String?
}

model Hero {
    id        String        @id @default(cuid())
    title     String
    subtitle  String
    image     String
    createdAt DateTime      @default(now())
    position  HeroPosition? @unique
}

model Service {
    id               String    @id @default(cuid())
    title            String
    summary          String
    shortDescription String
    markdown         String
    imageUrl         String
    icon             String
    createdAt        DateTime  @default(now())
    updatedAt        DateTime  @updatedAt
    position         Services? @unique
}

model AboutUs {
    id            String   @id @default(cuid())
    title         String
    summary       String
    markdown      String
    imageUrl      String
    insetImageUrl String
    createdAt     DateTime @default(now())
    inUse         Boolean  @default(false)
}

model MiddleHero {
    id            String   @id @default(cuid())
    title         String
    subtitle      String
    imageUrl      String
    insetImageUrl String
    createdAt     DateTime @default(now())
    inUse         Boolean  @default(false)
}

model Testimonial {
    id          String   @id @default(cuid())
    name        String
    title       String
    quote       String
    avatarUrl   String
    createdAt   DateTime @default(now())
    highlighted Boolean  @default(false)
}

model Blog {
    id        String   @id @default(cuid())
    title     String
    summary   String
    markdown  String
    imageUrl  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    author    User     @relation(fields: [userId], references: [id])
    userId    String
}

enum Services {
    SERVICE1
    SERVICE2
    SERVICE3
    SERVICE4
    SERVICE5
}

enum HeroPosition {
    TOP
    BOTTOM
}
