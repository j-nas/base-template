import type { InferGetStaticPropsType, NextPage } from "next";
import Head from "next/head";
import dynamic from "next/dynamic";
import { createProxySSGHelpers } from "@trpc/react-query/ssg";
import { createInnerTRPCContext } from "../server/api/trpc";
import { appRouter } from "../server/api/root";

const TopHero = dynamic(() => import("../components/TopHero"), {
  loading: () => <p>Loading...</p>,
});

const Footer = dynamic(() => import("../components/Footer"), {
  loading: () => <p>Loading...</p>,
});
const HeroBanner = dynamic(() => import("../components/BottomHero"), {
  loading: () => <p>Loading...</p>,
});
const Navbar = dynamic(() => import("../components/Navbar"), {
  loading: () => <p>Loading...</p>,
});
const Testimonial = dynamic(() => import("../components/Testimonial"), {
  loading: () => <p>Loading...</p>,
});
export const About: NextPage<InferGetStaticPropsType<typeof getStaticProps>> = (
  props
) => {
  const {
    business,
    testimonials,
    topHero,
    services,
    bottomHero,
    aboutUs,
    pageTitle,
  } = props;
  return (
    <>
      <Head>
        <title>{pageTitle}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mx-auto h-full">
        <Navbar business={business} services={services} />
        <TopHero pageTitle="Testimonials" hero={topHero} />

        <section className="mx-2 mt-32 flex flex-col items-center text-center">
          <span className="font-medium uppercase text-accent">
            Our Reviews{" "}
          </span>
          <h2 className="mt-2 font-bold text-5xl">What our clients say</h2>
          <p className="mx-2 mt-2 max-w-xl">
            Lorem, ipsum dolor sit amet consectetur adipisicing elit. Hic qui
            iure illo! Expedita consequuntur obcaecati omnis ipsum quis
            deleniti? Temporibus!
          </p>
          {/* div with 2 cards in a grid */}
          <div className="mt-12 mb-6 grid grid-cols-1 justify-evenly gap-12 lg:grid-cols-2 lg:p-24 xl:grid-cols-3">
            {testimonials?.map((testimonial) => (
              <Testimonial {...testimonial} key={testimonial.id} />
            ))}
          </div>
        </section>
        <HeroBanner businessName={business.title} hero={bottomHero} />
        <Footer
          aboutSummary={aboutUs.summary}
          business={business}
          services={services}
        />
      </main>
    </>
  );
};

export async function getStaticProps() {
  const ssg = createProxySSGHelpers({
    router: appRouter,
    ctx: createInnerTRPCContext({ session: null }),
  });

  const business = await ssg.businessInfo.getActive.fetch();
  const services = await ssg.service.getActive.fetch();
  const topHero = await ssg.hero.getByPosition.fetch({ position: "TOP" });
  const bottomHero = await ssg.hero.getByPosition.fetch({ position: "BOTTOM" });
  const aboutUs = await ssg.aboutUs.getCurrent.fetch();
  const testimonials = await ssg.testimonial.getAll.fetch();
  const mainService =
    services.find((service) => service.position === "SERVICE1") ?? null;
  const pageTitle = !mainService
    ? "About Us"
    : business.title +
      " | " +
      mainService.title +
      " | " +
      business.city +
      ", " +
      business.province;

  return {
    props: {
      business,
      services,
      bottomHero,
      topHero,
      aboutUs,
      pageTitle,
      testimonials,
    },
  };
}

export default About;
