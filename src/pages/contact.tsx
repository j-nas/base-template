import type { InferGetStaticPropsType, NextPage } from "next";
import Head from "next/head";
import dynamic from "next/dynamic";
import React, { useEffect, useState } from "react";
import { createProxySSGHelpers } from "@trpc/react-query/ssg";
import { createInnerTRPCContext } from "../server/api/trpc";
import { appRouter } from "../server/api/root";
import TopHero from "../components/TopHero";

const CldImg = dynamic(() => import("../components/CldImg"));
const Footer = dynamic(() => import("../components/Footer"));
const HeroBanner = dynamic(() => import("../components/BottomHero"));
const Navbar = dynamic(() => import("../components/Navbar"));
const Markdown = dynamic(() => import("../components/Markdown"));
export const Contact: NextPage<
  InferGetStaticPropsType<typeof getStaticProps>
> = (props) => {
  const [scrollPosition, setScrollPosition] = useState(0);

  useEffect(() => {
    window.addEventListener(
      "scroll",
      () => {
        setScrollPosition(window.scrollY);
      },
      { passive: true }
    );

    return () => {
      window.removeEventListener("scroll", () => {
        setScrollPosition(window.scrollY);
      });
    };
  }, []);

  const { business, topHero, services, bottomHero, aboutUs, pageTitle } = props;
  const { blur_url, format, height, width, public_Id, id } =
    bottomHero.PrimaryImage;
  return (
    <>
      <Head>
        <title>{pageTitle}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mx-auto h-full">
        <Navbar
          scrollPosition={scrollPosition}
          business={business}
          services={services}
        />
        <TopHero pageTitle="Contact" hero={topHero} />

        <section className="mx-auto my-12 w-1/2">
          <div className="relative h-96 w-96 overflow-hidden rounded-lg">
            {/* <div
              className={` h-full w-full bg-[url('https://res.cloudinary.com/dkascnwj7/image/upload/c_scale,w_500,h_500/v1674866706/base-template/steve-pancrate-p_aa_Nua_Yg-unsplash_w1pofn.jpg')] bg-cover bg-center transition-all hover:scale-125`}
            ></div> */}
            <CldImg
              alt="hero image"
              blur={blur_url}
              format={format}
              height={500}
              public_Id={public_Id}
              width={500}
              id={id}
              className={`h-full w-full object-cover transition-all hover:scale-125`}
            />
            <div className="absolute bottom-0 left-0">
              Email <br />
              <a
                className="link hover:link-hover"
                href={`mailto:${business.email}`}
              >
                {business.email}
              </a>
              <br />
              Phone <br />
              <a href={`tel:${business.telephone}`}>{business.telephone}</a>
            </div>
          </div>
        </section>
        <Footer
          aboutSummary={aboutUs.summary}
          business={business}
          services={services}
        />
      </main>
    </>
  );
};

export async function getStaticProps() {
  const ssg = createProxySSGHelpers({
    router: appRouter,
    ctx: createInnerTRPCContext({ session: null }),
  });

  const business = await ssg.businessInfo.getActive.fetch();
  const services = await ssg.service.getActive.fetch();
  const topHero = await ssg.hero.getByPosition.fetch({ position: "TOP" });
  const bottomHero = await ssg.hero.getByPosition.fetch({ position: "BOTTOM" });
  const aboutUs = await ssg.aboutUs.getCurrent.fetch();

  const mainService =
    services.find((service) => service.position === "SERVICE1") ?? null;
  const pageTitle = !mainService
    ? "About Us"
    : business.title +
      " | " +
      mainService.title +
      " | " +
      business.city +
      ", " +
      business.province;

  return {
    props: {
      business,
      services,
      bottomHero,
      topHero,
      aboutUs,
      pageTitle,
    },
  };
}

export default Contact;
